StageLayerBucket:
  # checkov:skip=GDS_AWS_3: Check that all S3 buckets have corresponding bucket policies
  Type: 'AWS::S3::Bucket'
  Properties:
    AccessControl: Private
    BucketName: !Sub ${Environment}-dap-stage-layer
    LoggingConfiguration:
      DestinationBucketName: !Ref GlobalLogBucket
      LogFilePrefix: dap-stage-layer/log
    PublicAccessBlockConfiguration:
      BlockPublicAcls: true
      BlockPublicPolicy: true
      IgnorePublicAcls: true
      RestrictPublicBuckets: true
    VersioningConfiguration:
      Status: Enabled

StageGlueDatabase:
  Type: AWS::Glue::Database
  Properties:
    CatalogId: !Sub ${AWS::AccountId}
    DatabaseInput:
      Name: !Sub ${Environment}-${StageGlueDatabaseName}

AccountManagementGlueTable:
  Type: AWS::Glue::Table
  Properties:
    CatalogId: !Sub ${AWS::AccountId}
    DatabaseName: !Ref StageGlueDatabase
    TableInput:
      Name: account_management
      TableType: EXTERNAL_TABLE
      PartitionKeys:
        - { Name: processed_date, Type: int }
        - { Name: event_name, Type: string }
      StorageDescriptor:
        Columns:
          - Name: event_id
            Type: string
          - Name: client_id
            Type: string
          - Name: component_id
            Type: string
          - Name: user_govuk_signin_journey_id
            Type: string
          - Name: user_user_id
            Type: string
          - Name: timestamp
            Type: int
          - Name: timestamp_formatted
            Type: string
          - Name: year
            Type: int
          - Name: month
            Type: int
          - Name: day
            Type: int
        InputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat
        Location: !Sub s3://${StorageBucket}/txma/account_management/
        OutputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat
        SerdeInfo:
            Parameters:
              serialiazation.format: 1
            SerializationLibrary: org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe


StageGlueCrawler:
  Type: AWS::Glue::Crawler
  Properties:
    Name: !Sub ${Environment}-stage-txma-datasets
    Role: !GetAtt StageGlueCrawlerRole.Arn
    Targets:
      CatalogTargets:
        - DatabaseName: !Ref StageGlueDatabase
          Tables:
            - !Ref AccountManagementGlueTable
    DatabaseName: !Ref StageGlueDatabase
    CrawlerSecurityConfiguration: !Ref GlueSecurityConfig
    RecrawlPolicy:
      RecrawlBehavior: CRAWL_EVERYTHING
    SchemaChangePolicy:
      UpdateBehavior: UPDATE_IN_DATABASE
      DeleteBehavior: DELETE_FROM_DATABASE
    Configuration: '{"Version":1,"CrawlerOutput":{"Partitions":{"AddOrUpdateBehavior":"InheritFromTable"}}}'

StageGlueCrawlerRole:
  Type: AWS::IAM::Role
  Properties:
    RoleName: !Sub ${Environment}-stage-glue-crawler-role
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: [glue.amazonaws.com]
          Action: ['sts:AssumeRole']
    ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole
    Path: /
    Policies:
      - PolicyName: !Sub ${Environment}-stage-glue-crawler-policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'glue:GetConnection'
                - 'glue:GetCrawler'
                - 'glue:CreateTable'
                - 'glue:UpdateCrawler'
                - 'glue:CreatePartition'
                - 'glue:BatchCreatePartition'
              Resource: '*'
            - Effect: Allow
              Action:
                - 's3:GetObject'
                - 's3:PutObject'
                - 's3:ListObject'
              Resource:
                - !Sub 'arn:aws:s3:::${StageLayerBucket}'
                - !Sub 'arn:aws:s3:::${StageLayerBucket}/*'
