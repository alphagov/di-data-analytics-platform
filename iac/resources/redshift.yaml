MyRedshiftSecret:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      Description: This is a Secrets Manager secret for a Redshift cluster
      GenerateSecretString:
        SecretStringTemplate: '{"username": "admin"}'
        GenerateStringKey: password
        PasswordLength: 16
        ExcludeCharacters: '"''@/\'
             
VPCForDAP:
    Type: AWS::EC2::VPC
    Properties: 
     CidrBlock: 10.0.0.0/16
     Tags:
      - Key: Environment
        Value: !Ref Environment
SubnetForDAP1:   
    Type: AWS::EC2::Subnet
    Properties: 
     VpcId: !Ref VPCForDAP
     AvailabilityZone: 
      Fn::GetAZs: eu-west-2    
     CidrBlock: 10.0.1.0/24
     Tags:
      - Key: Environment
        Value: !Ref Environment
SubnetForDAP2:   
    Type: AWS::EC2::Subnet
    Properties: 
     VpcId: !Ref VPCForDAP
     AvailabilityZone: 
      Fn::GetAZs: eu-west-2
     CidrBlock: 10.0.2.0/24
     Tags:
      - Key: Environment
        Value: !Ref Environment
SubnetForDAP3:   
    Type: AWS::EC2::Subnet
    Properties: 
     VpcId: !Ref VPCForDAP
     AvailabilityZone: 
      Fn::GetAZs: eu-west-2
     CidrBlock: 10.0.3.0/24
     Tags:
      - Key: Environment
        Value: !Ref Environment
RouteTableForDAP:
    Type: AWS::EC2::RouteTable
    Properties: 
     Tags:
      - Key: Environment
        Value: !Ref Environment
     VpcId: !Ref VPCForDAP            
    
SubnetRouteTableAssocDAP1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
     RouteTableId: !Ref RouteTableForDAP
     SubnetId: !Ref SubnetForDAP1
SubnetRouteTableAssocDAP2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
     RouteTableId: !Ref RouteTableForDAP
     SubnetId: !Ref SubnetForDAP2
SubnetRouteTableAssocDAP3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
     RouteTableId: !Ref RouteTableForDAP
     SubnetId: !Ref SubnetForDAP3      
RedshiftServerlessNamespace:
    Type: 'AWS::RedshiftServerless::Namespace'
    Properties:
      AdminUsername:
        'Fn::Sub': '{{resolve:secretsmanager:${MyRedshiftSecret}::username}}'
      AdminUserPassword:
        'Fn::Sub': '{{resolve:secretsmanager:${MyRedshiftSecret}::password}}'
      DbName: !Sub '${Environment}-redshift'
      DefaultIamRoleArn: !GetAtt IAMRoleKinesisFirehose.Arn
      IamRoles:
        - !GetAtt IAMRoleKinesisFirehose.Arn
      FinalSnapshotName: !Sub '${Environment}-redshift-snapshot'
      FinalSnapshotRetentionPeriod: 30
      LogExports:
        - useractivitylog
      NamespaceName: !Sub '${Environment}-redshift-serverless-namespace'
RedshiftServerlessWorkgroup:
    Type: 'AWS::RedshiftServerless::Workgroup'
    Properties:
      BaseCapacity: 128
      EnhancedVpcRouting: false
      NamespaceName: !Ref RedshiftServerlessNamespace
      Port: 5439
      PubliclyAccessible: false
      SubnetIds:
        - !Ref SubnetForDAP1
        - !Ref SubnetForDAP2
        - !Ref SubnetForDAP3
      WorkgroupName: !Sub '${Environment}-redshift-serverless-workgroup' 