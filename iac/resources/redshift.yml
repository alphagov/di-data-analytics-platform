IAMRoleRedshiftServerless:
  Type: 'AWS::IAM::Role'
  Properties:
    RoleName: !Sub ${Environment}-redshift-serverless-role
    AssumeRolePolicyDocument:
      Version: 2012-10-17
      Statement:
        - Effect: Allow
          Principal:
            Service:
              [firehose.amazonaws.com, redshift.amazonaws.com, glue.amazonaws.com, redshift-serverless.amazonaws.com]
          Action: 'sts:AssumeRole'
    MaxSessionDuration: 3600
    Policies:
      - PolicyName: !Sub ${Environment}-redshift-serverless-policy
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - 's3:AbortMultipartUpload'
                - 's3:GetBucketLocation'
                - 's3:GetObject'
                - 's3:ListBucket'
                - 's3:ListBucketMultipartUploads'
                - 's3:PutObject'
              Resource:
                - !Sub 'arn:aws:s3:::${RawLayerBucket}'
                - !Sub 'arn:aws:s3:::${RawLayerBucket}/*'
                - !Sub 'arn:aws:s3:::${StageLayerBucket}'
                - !Sub 'arn:aws:s3:::${StageLayerBucket}/*'
            - Effect: Allow
              Resource: !Sub arn:aws:glue:eu-west-2:${AWS::AccountId}:*
              Action:
                - 'glue:GetTable'
                - 'glue:GetTables'
                - 'glue:GetDatabase'
                - 'glue:GetDatabases'
                - 'glue:GetPartitions'

MyRedshiftSecret:
  Type: 'AWS::SecretsManager::Secret'
  Properties:
    Description: This is a Secrets Manager secret for a Redshift cluster
    GenerateSecretString:
      SecretStringTemplate: '{"username": "admin"}'
      GenerateStringKey: password
      PasswordLength: 16
      ExcludeCharacters: '"''@/\'
    KmsKeyId: !Ref KmsKey

RedshiftServerlessNamespace:
  Type: 'AWS::RedshiftServerless::Namespace'
  Properties:
    AdminUsername: !Sub '{{resolve:secretsmanager:${MyRedshiftSecret}::username}}'
    AdminUserPassword: !Sub '{{resolve:secretsmanager:${MyRedshiftSecret}::password}}'
    DbName: !Sub '${Environment}-redshift'
    DefaultIamRoleArn: !GetAtt IAMRoleRedshiftServerless.Arn
    IamRoles:
      - !GetAtt IAMRoleRedshiftServerless.Arn
    FinalSnapshotName: !Sub '${Environment}-redshift-snapshot'
    FinalSnapshotRetentionPeriod: 30
    LogExports:
      - useractivitylog
    NamespaceName: !Sub '${Environment}-redshift-serverless-ns'

RedshiftServerlessWorkgroup:
  Type: 'AWS::RedshiftServerless::Workgroup'
  Properties:
    BaseCapacity: 128
    EnhancedVpcRouting: false
    NamespaceName: !Ref RedshiftServerlessNamespace
    Port: 5439
    PubliclyAccessible: false
    SubnetIds:
      - !Ref SubnetForDAP1
      - !Ref SubnetForDAP2
      - !Ref SubnetForDAP3
    WorkgroupName: !Sub '${Environment}-redshift-serverless-workgroup'
