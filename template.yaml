AWSTemplateFormatVersion: 2010-09-09
Description: Data and Analytics Stack
Transform: 'AWS::Serverless-2016-10-31'
Parameters:
  Environment:
    Description: Environment type
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - build
      - staging
      - integration
      - production
  CodeSigningConfigArn:
    Description: ARN of Code Signing Config from deployment pipeline
    Type: String
    Default: none
  PermissionsBoundary:
    Description: ARN of permissions boundary for new roles
    Type: String
    Default: none
  DeliveryStreamName:
    Description: Delivery Stream
    Type: String
    Default: dap-txma-delivery-stream
Conditions:
  UseCodeSigning: !Not
    - !Equals
      - !Ref CodeSigningConfigArn
      - none
  UsePermissionsBoundary: !Not
    - !Equals
      - !Ref PermissionsBoundary
      - none
Globals:
  Function:
    CodeSigningConfigArn: !If
      - UseCodeSigning
      - !Ref CodeSigningConfigArn
      - !Ref 'AWS::NoValue'
    PermissionsBoundary: !If
      - UsePermissionsBoundary
      - !Ref PermissionsBoundary
      - !Ref 'AWS::NoValue'
    Runtime: nodejs18.x
    Timeout: 30
    CodeUri: dist/
    Environment:
      Variables:
        NODE_OPTIONS: '--enable-source-maps'
Resources:
  EventQueue:
    # checkov:skip=CKV_AWS_27: This is a temporary test queue
    Type: 'AWS::SQS::Queue'
    Properties:
      QueueName: txma-event-queue
  EventConsumerLambda:
    # checkov:skip=CKV_AWS_116: DLQ not needed for lambda driven by SQS
    # checkov:skip=CKV_AWS_117: VPC not needed for lambda

    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: txma-event-consumer
      Events:
        CleanEvent:
          Type: SQS
          Properties:
            BatchSize: 1
            Queue: !GetAtt EventQueue.Arn
      Handler: txma-event-consumer.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            - Effect: Allow
              Action:
                - 'sqs:DeleteMessage'
                - 'sqs:GetQueueAttributes'
                - 'sqs:ReceiveMessage'
              Resource: !GetAtt EventQueue.Arn
      ReservedConcurrentExecutions: 10
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption
        Variables:
          FIREHOSE_STREAM_NAME: !Sub 'txma-event-stream-${Environment}'
      Tags:
        Environment: !Ref Environment

  S3Bucket:
    # checkov:skip=CKV_AWS_18: Ensure the S3 bucket has access logging enabled
    # checkov:skip=GDS_AWS_3: Check that all S3 buckets have corresponding bucket policies
    # checkov:skip=CKV_AWS_53: Ensure S3 bucket has block public ACLS enabled
    Type: 'AWS::S3::Bucket'
    Properties:
      AccessControl: Private
      BucketName: !Join
        - '-'
        - - !Ref Environment
          - 'dap-raw-layer'
      PublicAccessBlockConfiguration:
        # BlockPublicAcls: Boolean
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled

  KinesisFirehose:
    Type: 'AWS::KinesisFirehose::DeliveryStream'
    Properties:
      DeliveryStreamName: !Join
        - '-'
        - - !Ref Environment
          - !Ref DeliveryStreamName
          - 'demo'
      DeliveryStreamType: DirectPut
      ExtendedS3DestinationConfiguration:
        BucketARN: !GetAtt S3Bucket.Arn
        CloudWatchLoggingOptions:
          Enabled: true
          LogGroupName: !Join
            - '-'
            - - !Ref Environment
              - !Ref DeliveryStreamName
          LogStreamName: !Join
            - '-'
            - - !Ref Environment
              - !Ref DeliveryStreamName
        BufferingHints:
          IntervalInSeconds: 900
          SizeInMBs: 128
        RoleARN: !GetAtt IAMRoleKinesisFirehose.Arn
        Prefix: '!{partitionKeyFromQuery:datasource}/!{partitionKeyFromQuery:event_name}/year=!{partitionKeyFromQuery:year}/month=!{partitionKeyFromQuery:month}/day=!{partitionKeyFromQuery:day}/'
        CompressionFormat: GZIP
        ErrorOutputPrefix: kinesis-processing-errors-
        DynamicPartitioningConfiguration:
          Enabled: true
        ProcessingConfiguration:
          Enabled: true
          Processors:
            - Type: AppendDelimiterToRecord
            - Type: MetadataExtraction
              Parameters:
                - ParameterName: MetadataExtractionQuery
                  ParameterValue: '{datasource: ''txma'',event_name: .event_name,year:now | strftime("%Y"),month:now | strftime("%m"),day:now | strftime("%d")}'
                - ParameterName: JsonParsingEngine
                  ParameterValue: 'JQ-1.6'
        DataFormatConversionConfiguration:
          Enabled: false

  IAMRoleKinesisFirehose:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: kinesis-firehose-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: firehose.amazonaws.com
            Action: 'sts:AssumeRole'
      MaxSessionDuration: 3600
      Policies:
        - PolicyName: policy1
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 's3:AbortMultipartUpload'
                  - 's3:GetBucketLocation'
                  - 's3:GetObject'
                  - 's3:ListBucket'
                  - 's3:ListBucketMultipartUploads'
                  - 's3:PutObject'
                Resource:
                  - !Sub 'arn:aws:s3:::${S3Bucket}'
                  - !Sub 'arn:aws:s3:::${S3Bucket}/*'
