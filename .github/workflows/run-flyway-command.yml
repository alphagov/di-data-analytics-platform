name: ✳️ Run flyway command on redshift

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        required: true
        description: AWS environment
        options: [DEV, TEST, FEATURE, BUILD, STAGING, INTEGRATION, PRODUCTION, PRODUCTION-PREVIEW]
      command:
        type: choice
        required: true
        description: Flyway command to run
        options: [info, migrate, validate]
      database:
        type: string
        required: false
        description: Database on which to perform migrations (defaults to dap_txma_reporting_db)
        default: unset

jobs:
  validate-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Validate input environment
        run: scripts/validate-environment.sh ${{ inputs.environment }}

  run-flyway:
    needs: [validate-environment]
    # These permissions are needed to interact with GitHub's OIDC Token endpoint (enabling the aws-actions/configure-aws-credentials action)
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Assume AWS DB migration role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-2
          role-to-assume: ${{ secrets[format('DB_MIGRATION_ROLE_ARN_{0}', inputs.environment)] }}
      - name: Invoke lambda
        run: |
          DATABASE=$(if [ -z ${{ inputs.database }} ] || [ ${{ inputs.database }} == "unset" ]; then echo dap_txma_reporting_db; else echo ${{ inputs.database }}; fi)
          PAYLOAD=$(echo "{\"command\": \"${{ inputs.command }}\", \"database\": \"$DATABASE\"}")
          echo "$PAYLOAD" | jq
          ENCODED=$(echo "$PAYLOAD" | openssl base64)
          aws --region eu-west-2 lambda invoke --function-name run-flyway-command --payload "$ENCODED" out.json
          cat out.json | jq
